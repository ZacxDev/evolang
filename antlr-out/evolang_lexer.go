// Code generated from ./EvoLangLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type EvoLangLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var EvoLangLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func evolanglexerLexerInit() {
	staticData := &EvoLangLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "SANDBOX_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'model'", "'events'", "'enum'", "'@references'", "'@linkedBy'",
		"'body'", "'authenticate'", "'return'", "'Int'", "'String'", "'Boolean'",
		"'if'", "'main'", "'print'", "'Listen'", "'query'", "'rule'", "'mutation'",
		"'input'", "'@key'", "'Function'", "'Rules'", "'Input'", "'*'", "'/'",
		"'+'", "'-'", "'>'", "'<'", "'=='", "'!='", "'>='", "'<='", "'&&'",
		"'||'", "'in'", "", "", "", "", "", "", "", "'{'", "'}'", "'['", "']'",
		"'('", "')'", "':'", "'#'", "'.'", "','", "'@'", "'|'", "'[sandbox lang=\"go\"]'",
		"'[/sandbox]'",
	}
	staticData.SymbolicNames = []string{
		"", "MODEL_DEF", "EVENTS_DEF", "ENUM_DEF", "REFERENCES_DEF", "LINKED_BY_DEF",
		"BODY_DEF", "AUTHENTICATE_DEF", "RETURN_DEF", "TYPE_INT_DEF", "TYPE_STRING_DEF",
		"TYPE_BOOLEAN_DEF", "IF_DEF", "MAIN_DEF", "PRINT_DEF", "LISTEN_DEF",
		"QUERY_DEF", "RULE_DEF", "MUTATION_DEF", "INPUT_DEF", "KEY_DEF", "OPERATION_FUNCTION_DEF",
		"OPERATION_RULES_DEF", "OPERATION_INPUT_DEF", "OP_MUL", "OP_DIV", "OP_SUM",
		"OP_SUB", "OP_GT", "OP_LT", "OP_EQEQ", "OP_NEQ", "OP_GTEQ", "OP_LTEQ",
		"OP_AND", "OP_OR", "OP_IN", "ID", "STRING", "INT", "BOOLEAN", "WS",
		"COMMENT", "WHITESPACE", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_S_BRACKET",
		"CLOSE_S_BRACKET", "OPEN_PAREN", "CLOSE_PAREN", "COLON", "HASH", "DOT",
		"COMMA", "AT", "PIPE", "OPEN_SANDBOX_MODE", "CLOSE_SANDBOX_MODE", "SANDBOX",
		"SANDBOX_CONTENT",
	}
	staticData.RuleNames = []string{
		"MODEL_DEF", "EVENTS_DEF", "ENUM_DEF", "REFERENCES_DEF", "LINKED_BY_DEF",
		"BODY_DEF", "AUTHENTICATE_DEF", "RETURN_DEF", "TYPE_INT_DEF", "TYPE_STRING_DEF",
		"TYPE_BOOLEAN_DEF", "IF_DEF", "MAIN_DEF", "PRINT_DEF", "LISTEN_DEF",
		"QUERY_DEF", "RULE_DEF", "MUTATION_DEF", "INPUT_DEF", "KEY_DEF", "OPERATION_FUNCTION_DEF",
		"OPERATION_RULES_DEF", "OPERATION_INPUT_DEF", "OP_MUL", "OP_DIV", "OP_SUM",
		"OP_SUB", "OP_GT", "OP_LT", "OP_EQEQ", "OP_NEQ", "OP_GTEQ", "OP_LTEQ",
		"OP_AND", "OP_OR", "OP_IN", "ID", "STRING", "INT", "BOOLEAN", "WS",
		"COMMENT", "WHITESPACE", "OPEN_BRACKET", "CLOSE_BRACKET", "OPEN_S_BRACKET",
		"CLOSE_S_BRACKET", "OPEN_PAREN", "CLOSE_PAREN", "COLON", "HASH", "DOT",
		"COMMA", "AT", "PIPE", "OPEN_SANDBOX_MODE", "CLOSE_SANDBOX_MODE", "SANDBOX",
		"SANDBOX_CONTENT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 59, 439, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2,
		46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51,
		7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7,
		56, 2, 57, 7, 57, 2, 58, 7, 58, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1,
		5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25,
		1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33,
		1, 33, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 5, 36, 313,
		8, 36, 10, 36, 12, 36, 316, 9, 36, 1, 37, 1, 37, 1, 37, 1, 37, 5, 37, 322,
		8, 37, 10, 37, 12, 37, 325, 9, 37, 1, 37, 1, 37, 1, 38, 4, 38, 330, 8,
		38, 11, 38, 12, 38, 331, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39,
		1, 39, 1, 39, 3, 39, 343, 8, 39, 1, 40, 4, 40, 346, 8, 40, 11, 40, 12,
		40, 347, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 5, 41, 356, 8, 41, 10,
		41, 12, 41, 359, 9, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 4, 42, 366,
		8, 42, 11, 42, 12, 42, 367, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1,
		45, 1, 45, 1, 46, 1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50,
		1, 50, 1, 51, 1, 51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 1, 55, 1,
		55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55,
		1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56,
		1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 58, 4, 58, 436, 8, 58, 11,
		58, 12, 58, 437, 1, 357, 0, 59, 2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14,
		7, 16, 8, 18, 9, 20, 10, 22, 11, 24, 12, 26, 13, 28, 14, 30, 15, 32, 16,
		34, 17, 36, 18, 38, 19, 40, 20, 42, 21, 44, 22, 46, 23, 48, 24, 50, 25,
		52, 26, 54, 27, 56, 28, 58, 29, 60, 30, 62, 31, 64, 32, 66, 33, 68, 34,
		70, 35, 72, 36, 74, 37, 76, 38, 78, 39, 80, 40, 82, 41, 84, 42, 86, 43,
		88, 44, 90, 45, 92, 46, 94, 47, 96, 48, 98, 49, 100, 50, 102, 51, 104,
		52, 106, 53, 108, 54, 110, 55, 112, 56, 114, 57, 116, 58, 118, 59, 2, 0,
		1, 6, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97,
		122, 2, 0, 34, 34, 92, 92, 1, 0, 48, 57, 3, 0, 9, 10, 13, 13, 32, 32, 1,
		0, 91, 92, 446, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0,
		8, 1, 0, 0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0,
		0, 16, 1, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0,
		0, 0, 24, 1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0,
		0, 0, 0, 32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1,
		0, 0, 0, 0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46,
		1, 0, 0, 0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0,
		54, 1, 0, 0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0,
		0, 62, 1, 0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0,
		0, 0, 70, 1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 76, 1, 0,
		0, 0, 0, 78, 1, 0, 0, 0, 0, 80, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 0, 84, 1,
		0, 0, 0, 0, 86, 1, 0, 0, 0, 0, 88, 1, 0, 0, 0, 0, 90, 1, 0, 0, 0, 0, 92,
		1, 0, 0, 0, 0, 94, 1, 0, 0, 0, 0, 96, 1, 0, 0, 0, 0, 98, 1, 0, 0, 0, 0,
		100, 1, 0, 0, 0, 0, 102, 1, 0, 0, 0, 0, 104, 1, 0, 0, 0, 0, 106, 1, 0,
		0, 0, 0, 108, 1, 0, 0, 0, 0, 110, 1, 0, 0, 0, 0, 112, 1, 0, 0, 0, 0, 114,
		1, 0, 0, 0, 0, 116, 1, 0, 0, 0, 1, 118, 1, 0, 0, 0, 2, 120, 1, 0, 0, 0,
		4, 126, 1, 0, 0, 0, 6, 133, 1, 0, 0, 0, 8, 138, 1, 0, 0, 0, 10, 150, 1,
		0, 0, 0, 12, 160, 1, 0, 0, 0, 14, 165, 1, 0, 0, 0, 16, 178, 1, 0, 0, 0,
		18, 185, 1, 0, 0, 0, 20, 189, 1, 0, 0, 0, 22, 196, 1, 0, 0, 0, 24, 204,
		1, 0, 0, 0, 26, 207, 1, 0, 0, 0, 28, 212, 1, 0, 0, 0, 30, 218, 1, 0, 0,
		0, 32, 225, 1, 0, 0, 0, 34, 231, 1, 0, 0, 0, 36, 236, 1, 0, 0, 0, 38, 245,
		1, 0, 0, 0, 40, 251, 1, 0, 0, 0, 42, 256, 1, 0, 0, 0, 44, 265, 1, 0, 0,
		0, 46, 271, 1, 0, 0, 0, 48, 277, 1, 0, 0, 0, 50, 279, 1, 0, 0, 0, 52, 281,
		1, 0, 0, 0, 54, 283, 1, 0, 0, 0, 56, 285, 1, 0, 0, 0, 58, 287, 1, 0, 0,
		0, 60, 289, 1, 0, 0, 0, 62, 292, 1, 0, 0, 0, 64, 295, 1, 0, 0, 0, 66, 298,
		1, 0, 0, 0, 68, 301, 1, 0, 0, 0, 70, 304, 1, 0, 0, 0, 72, 307, 1, 0, 0,
		0, 74, 310, 1, 0, 0, 0, 76, 317, 1, 0, 0, 0, 78, 329, 1, 0, 0, 0, 80, 342,
		1, 0, 0, 0, 82, 345, 1, 0, 0, 0, 84, 351, 1, 0, 0, 0, 86, 365, 1, 0, 0,
		0, 88, 371, 1, 0, 0, 0, 90, 373, 1, 0, 0, 0, 92, 375, 1, 0, 0, 0, 94, 377,
		1, 0, 0, 0, 96, 379, 1, 0, 0, 0, 98, 381, 1, 0, 0, 0, 100, 383, 1, 0, 0,
		0, 102, 385, 1, 0, 0, 0, 104, 387, 1, 0, 0, 0, 106, 389, 1, 0, 0, 0, 108,
		391, 1, 0, 0, 0, 110, 393, 1, 0, 0, 0, 112, 395, 1, 0, 0, 0, 114, 417,
		1, 0, 0, 0, 116, 430, 1, 0, 0, 0, 118, 435, 1, 0, 0, 0, 120, 121, 5, 109,
		0, 0, 121, 122, 5, 111, 0, 0, 122, 123, 5, 100, 0, 0, 123, 124, 5, 101,
		0, 0, 124, 125, 5, 108, 0, 0, 125, 3, 1, 0, 0, 0, 126, 127, 5, 101, 0,
		0, 127, 128, 5, 118, 0, 0, 128, 129, 5, 101, 0, 0, 129, 130, 5, 110, 0,
		0, 130, 131, 5, 116, 0, 0, 131, 132, 5, 115, 0, 0, 132, 5, 1, 0, 0, 0,
		133, 134, 5, 101, 0, 0, 134, 135, 5, 110, 0, 0, 135, 136, 5, 117, 0, 0,
		136, 137, 5, 109, 0, 0, 137, 7, 1, 0, 0, 0, 138, 139, 5, 64, 0, 0, 139,
		140, 5, 114, 0, 0, 140, 141, 5, 101, 0, 0, 141, 142, 5, 102, 0, 0, 142,
		143, 5, 101, 0, 0, 143, 144, 5, 114, 0, 0, 144, 145, 5, 101, 0, 0, 145,
		146, 5, 110, 0, 0, 146, 147, 5, 99, 0, 0, 147, 148, 5, 101, 0, 0, 148,
		149, 5, 115, 0, 0, 149, 9, 1, 0, 0, 0, 150, 151, 5, 64, 0, 0, 151, 152,
		5, 108, 0, 0, 152, 153, 5, 105, 0, 0, 153, 154, 5, 110, 0, 0, 154, 155,
		5, 107, 0, 0, 155, 156, 5, 101, 0, 0, 156, 157, 5, 100, 0, 0, 157, 158,
		5, 66, 0, 0, 158, 159, 5, 121, 0, 0, 159, 11, 1, 0, 0, 0, 160, 161, 5,
		98, 0, 0, 161, 162, 5, 111, 0, 0, 162, 163, 5, 100, 0, 0, 163, 164, 5,
		121, 0, 0, 164, 13, 1, 0, 0, 0, 165, 166, 5, 97, 0, 0, 166, 167, 5, 117,
		0, 0, 167, 168, 5, 116, 0, 0, 168, 169, 5, 104, 0, 0, 169, 170, 5, 101,
		0, 0, 170, 171, 5, 110, 0, 0, 171, 172, 5, 116, 0, 0, 172, 173, 5, 105,
		0, 0, 173, 174, 5, 99, 0, 0, 174, 175, 5, 97, 0, 0, 175, 176, 5, 116, 0,
		0, 176, 177, 5, 101, 0, 0, 177, 15, 1, 0, 0, 0, 178, 179, 5, 114, 0, 0,
		179, 180, 5, 101, 0, 0, 180, 181, 5, 116, 0, 0, 181, 182, 5, 117, 0, 0,
		182, 183, 5, 114, 0, 0, 183, 184, 5, 110, 0, 0, 184, 17, 1, 0, 0, 0, 185,
		186, 5, 73, 0, 0, 186, 187, 5, 110, 0, 0, 187, 188, 5, 116, 0, 0, 188,
		19, 1, 0, 0, 0, 189, 190, 5, 83, 0, 0, 190, 191, 5, 116, 0, 0, 191, 192,
		5, 114, 0, 0, 192, 193, 5, 105, 0, 0, 193, 194, 5, 110, 0, 0, 194, 195,
		5, 103, 0, 0, 195, 21, 1, 0, 0, 0, 196, 197, 5, 66, 0, 0, 197, 198, 5,
		111, 0, 0, 198, 199, 5, 111, 0, 0, 199, 200, 5, 108, 0, 0, 200, 201, 5,
		101, 0, 0, 201, 202, 5, 97, 0, 0, 202, 203, 5, 110, 0, 0, 203, 23, 1, 0,
		0, 0, 204, 205, 5, 105, 0, 0, 205, 206, 5, 102, 0, 0, 206, 25, 1, 0, 0,
		0, 207, 208, 5, 109, 0, 0, 208, 209, 5, 97, 0, 0, 209, 210, 5, 105, 0,
		0, 210, 211, 5, 110, 0, 0, 211, 27, 1, 0, 0, 0, 212, 213, 5, 112, 0, 0,
		213, 214, 5, 114, 0, 0, 214, 215, 5, 105, 0, 0, 215, 216, 5, 110, 0, 0,
		216, 217, 5, 116, 0, 0, 217, 29, 1, 0, 0, 0, 218, 219, 5, 76, 0, 0, 219,
		220, 5, 105, 0, 0, 220, 221, 5, 115, 0, 0, 221, 222, 5, 116, 0, 0, 222,
		223, 5, 101, 0, 0, 223, 224, 5, 110, 0, 0, 224, 31, 1, 0, 0, 0, 225, 226,
		5, 113, 0, 0, 226, 227, 5, 117, 0, 0, 227, 228, 5, 101, 0, 0, 228, 229,
		5, 114, 0, 0, 229, 230, 5, 121, 0, 0, 230, 33, 1, 0, 0, 0, 231, 232, 5,
		114, 0, 0, 232, 233, 5, 117, 0, 0, 233, 234, 5, 108, 0, 0, 234, 235, 5,
		101, 0, 0, 235, 35, 1, 0, 0, 0, 236, 237, 5, 109, 0, 0, 237, 238, 5, 117,
		0, 0, 238, 239, 5, 116, 0, 0, 239, 240, 5, 97, 0, 0, 240, 241, 5, 116,
		0, 0, 241, 242, 5, 105, 0, 0, 242, 243, 5, 111, 0, 0, 243, 244, 5, 110,
		0, 0, 244, 37, 1, 0, 0, 0, 245, 246, 5, 105, 0, 0, 246, 247, 5, 110, 0,
		0, 247, 248, 5, 112, 0, 0, 248, 249, 5, 117, 0, 0, 249, 250, 5, 116, 0,
		0, 250, 39, 1, 0, 0, 0, 251, 252, 5, 64, 0, 0, 252, 253, 5, 107, 0, 0,
		253, 254, 5, 101, 0, 0, 254, 255, 5, 121, 0, 0, 255, 41, 1, 0, 0, 0, 256,
		257, 5, 70, 0, 0, 257, 258, 5, 117, 0, 0, 258, 259, 5, 110, 0, 0, 259,
		260, 5, 99, 0, 0, 260, 261, 5, 116, 0, 0, 261, 262, 5, 105, 0, 0, 262,
		263, 5, 111, 0, 0, 263, 264, 5, 110, 0, 0, 264, 43, 1, 0, 0, 0, 265, 266,
		5, 82, 0, 0, 266, 267, 5, 117, 0, 0, 267, 268, 5, 108, 0, 0, 268, 269,
		5, 101, 0, 0, 269, 270, 5, 115, 0, 0, 270, 45, 1, 0, 0, 0, 271, 272, 5,
		73, 0, 0, 272, 273, 5, 110, 0, 0, 273, 274, 5, 112, 0, 0, 274, 275, 5,
		117, 0, 0, 275, 276, 5, 116, 0, 0, 276, 47, 1, 0, 0, 0, 277, 278, 5, 42,
		0, 0, 278, 49, 1, 0, 0, 0, 279, 280, 5, 47, 0, 0, 280, 51, 1, 0, 0, 0,
		281, 282, 5, 43, 0, 0, 282, 53, 1, 0, 0, 0, 283, 284, 5, 45, 0, 0, 284,
		55, 1, 0, 0, 0, 285, 286, 5, 62, 0, 0, 286, 57, 1, 0, 0, 0, 287, 288, 5,
		60, 0, 0, 288, 59, 1, 0, 0, 0, 289, 290, 5, 61, 0, 0, 290, 291, 5, 61,
		0, 0, 291, 61, 1, 0, 0, 0, 292, 293, 5, 33, 0, 0, 293, 294, 5, 61, 0, 0,
		294, 63, 1, 0, 0, 0, 295, 296, 5, 62, 0, 0, 296, 297, 5, 61, 0, 0, 297,
		65, 1, 0, 0, 0, 298, 299, 5, 60, 0, 0, 299, 300, 5, 61, 0, 0, 300, 67,
		1, 0, 0, 0, 301, 302, 5, 38, 0, 0, 302, 303, 5, 38, 0, 0, 303, 69, 1, 0,
		0, 0, 304, 305, 5, 124, 0, 0, 305, 306, 5, 124, 0, 0, 306, 71, 1, 0, 0,
		0, 307, 308, 5, 105, 0, 0, 308, 309, 5, 110, 0, 0, 309, 73, 1, 0, 0, 0,
		310, 314, 7, 0, 0, 0, 311, 313, 7, 1, 0, 0, 312, 311, 1, 0, 0, 0, 313,
		316, 1, 0, 0, 0, 314, 312, 1, 0, 0, 0, 314, 315, 1, 0, 0, 0, 315, 75, 1,
		0, 0, 0, 316, 314, 1, 0, 0, 0, 317, 323, 5, 34, 0, 0, 318, 322, 8, 2, 0,
		0, 319, 320, 5, 92, 0, 0, 320, 322, 9, 0, 0, 0, 321, 318, 1, 0, 0, 0, 321,
		319, 1, 0, 0, 0, 322, 325, 1, 0, 0, 0, 323, 321, 1, 0, 0, 0, 323, 324,
		1, 0, 0, 0, 324, 326, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 326, 327, 5, 34,
		0, 0, 327, 77, 1, 0, 0, 0, 328, 330, 7, 3, 0, 0, 329, 328, 1, 0, 0, 0,
		330, 331, 1, 0, 0, 0, 331, 329, 1, 0, 0, 0, 331, 332, 1, 0, 0, 0, 332,
		79, 1, 0, 0, 0, 333, 334, 5, 116, 0, 0, 334, 335, 5, 114, 0, 0, 335, 336,
		5, 117, 0, 0, 336, 343, 5, 101, 0, 0, 337, 338, 5, 102, 0, 0, 338, 339,
		5, 97, 0, 0, 339, 340, 5, 108, 0, 0, 340, 341, 5, 115, 0, 0, 341, 343,
		5, 101, 0, 0, 342, 333, 1, 0, 0, 0, 342, 337, 1, 0, 0, 0, 343, 81, 1, 0,
		0, 0, 344, 346, 7, 4, 0, 0, 345, 344, 1, 0, 0, 0, 346, 347, 1, 0, 0, 0,
		347, 345, 1, 0, 0, 0, 347, 348, 1, 0, 0, 0, 348, 349, 1, 0, 0, 0, 349,
		350, 6, 40, 0, 0, 350, 83, 1, 0, 0, 0, 351, 352, 5, 47, 0, 0, 352, 353,
		5, 47, 0, 0, 353, 357, 1, 0, 0, 0, 354, 356, 9, 0, 0, 0, 355, 354, 1, 0,
		0, 0, 356, 359, 1, 0, 0, 0, 357, 358, 1, 0, 0, 0, 357, 355, 1, 0, 0, 0,
		358, 360, 1, 0, 0, 0, 359, 357, 1, 0, 0, 0, 360, 361, 5, 10, 0, 0, 361,
		362, 1, 0, 0, 0, 362, 363, 6, 41, 0, 0, 363, 85, 1, 0, 0, 0, 364, 366,
		7, 4, 0, 0, 365, 364, 1, 0, 0, 0, 366, 367, 1, 0, 0, 0, 367, 365, 1, 0,
		0, 0, 367, 368, 1, 0, 0, 0, 368, 369, 1, 0, 0, 0, 369, 370, 6, 42, 0, 0,
		370, 87, 1, 0, 0, 0, 371, 372, 5, 123, 0, 0, 372, 89, 1, 0, 0, 0, 373,
		374, 5, 125, 0, 0, 374, 91, 1, 0, 0, 0, 375, 376, 5, 91, 0, 0, 376, 93,
		1, 0, 0, 0, 377, 378, 5, 93, 0, 0, 378, 95, 1, 0, 0, 0, 379, 380, 5, 40,
		0, 0, 380, 97, 1, 0, 0, 0, 381, 382, 5, 41, 0, 0, 382, 99, 1, 0, 0, 0,
		383, 384, 5, 58, 0, 0, 384, 101, 1, 0, 0, 0, 385, 386, 5, 35, 0, 0, 386,
		103, 1, 0, 0, 0, 387, 388, 5, 46, 0, 0, 388, 105, 1, 0, 0, 0, 389, 390,
		5, 44, 0, 0, 390, 107, 1, 0, 0, 0, 391, 392, 5, 64, 0, 0, 392, 109, 1,
		0, 0, 0, 393, 394, 5, 124, 0, 0, 394, 111, 1, 0, 0, 0, 395, 396, 5, 91,
		0, 0, 396, 397, 5, 115, 0, 0, 397, 398, 5, 97, 0, 0, 398, 399, 5, 110,
		0, 0, 399, 400, 5, 100, 0, 0, 400, 401, 5, 98, 0, 0, 401, 402, 5, 111,
		0, 0, 402, 403, 5, 120, 0, 0, 403, 404, 5, 32, 0, 0, 404, 405, 5, 108,
		0, 0, 405, 406, 5, 97, 0, 0, 406, 407, 5, 110, 0, 0, 407, 408, 5, 103,
		0, 0, 408, 409, 5, 61, 0, 0, 409, 410, 5, 34, 0, 0, 410, 411, 5, 103, 0,
		0, 411, 412, 5, 111, 0, 0, 412, 413, 5, 34, 0, 0, 413, 414, 5, 93, 0, 0,
		414, 415, 1, 0, 0, 0, 415, 416, 6, 55, 1, 0, 416, 113, 1, 0, 0, 0, 417,
		418, 5, 91, 0, 0, 418, 419, 5, 47, 0, 0, 419, 420, 5, 115, 0, 0, 420, 421,
		5, 97, 0, 0, 421, 422, 5, 110, 0, 0, 422, 423, 5, 100, 0, 0, 423, 424,
		5, 98, 0, 0, 424, 425, 5, 111, 0, 0, 425, 426, 5, 120, 0, 0, 426, 427,
		5, 93, 0, 0, 427, 428, 1, 0, 0, 0, 428, 429, 6, 56, 2, 0, 429, 115, 1,
		0, 0, 0, 430, 431, 3, 112, 55, 0, 431, 432, 3, 118, 58, 0, 432, 433, 3,
		114, 56, 0, 433, 117, 1, 0, 0, 0, 434, 436, 8, 5, 0, 0, 435, 434, 1, 0,
		0, 0, 436, 437, 1, 0, 0, 0, 437, 435, 1, 0, 0, 0, 437, 438, 1, 0, 0, 0,
		438, 119, 1, 0, 0, 0, 11, 0, 1, 314, 321, 323, 331, 342, 347, 357, 367,
		437, 3, 6, 0, 0, 5, 1, 0, 4, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// EvoLangLexerInit initializes any static state used to implement EvoLangLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewEvoLangLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func EvoLangLexerInit() {
	staticData := &EvoLangLexerLexerStaticData
	staticData.once.Do(evolanglexerLexerInit)
}

// NewEvoLangLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewEvoLangLexer(input antlr.CharStream) *EvoLangLexer {
	EvoLangLexerInit()
	l := new(EvoLangLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &EvoLangLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "EvoLangLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// EvoLangLexer tokens.
const (
	EvoLangLexerMODEL_DEF              = 1
	EvoLangLexerEVENTS_DEF             = 2
	EvoLangLexerENUM_DEF               = 3
	EvoLangLexerREFERENCES_DEF         = 4
	EvoLangLexerLINKED_BY_DEF          = 5
	EvoLangLexerBODY_DEF               = 6
	EvoLangLexerAUTHENTICATE_DEF       = 7
	EvoLangLexerRETURN_DEF             = 8
	EvoLangLexerTYPE_INT_DEF           = 9
	EvoLangLexerTYPE_STRING_DEF        = 10
	EvoLangLexerTYPE_BOOLEAN_DEF       = 11
	EvoLangLexerIF_DEF                 = 12
	EvoLangLexerMAIN_DEF               = 13
	EvoLangLexerPRINT_DEF              = 14
	EvoLangLexerLISTEN_DEF             = 15
	EvoLangLexerQUERY_DEF              = 16
	EvoLangLexerRULE_DEF               = 17
	EvoLangLexerMUTATION_DEF           = 18
	EvoLangLexerINPUT_DEF              = 19
	EvoLangLexerKEY_DEF                = 20
	EvoLangLexerOPERATION_FUNCTION_DEF = 21
	EvoLangLexerOPERATION_RULES_DEF    = 22
	EvoLangLexerOPERATION_INPUT_DEF    = 23
	EvoLangLexerOP_MUL                 = 24
	EvoLangLexerOP_DIV                 = 25
	EvoLangLexerOP_SUM                 = 26
	EvoLangLexerOP_SUB                 = 27
	EvoLangLexerOP_GT                  = 28
	EvoLangLexerOP_LT                  = 29
	EvoLangLexerOP_EQEQ                = 30
	EvoLangLexerOP_NEQ                 = 31
	EvoLangLexerOP_GTEQ                = 32
	EvoLangLexerOP_LTEQ                = 33
	EvoLangLexerOP_AND                 = 34
	EvoLangLexerOP_OR                  = 35
	EvoLangLexerOP_IN                  = 36
	EvoLangLexerID                     = 37
	EvoLangLexerSTRING                 = 38
	EvoLangLexerINT                    = 39
	EvoLangLexerBOOLEAN                = 40
	EvoLangLexerWS                     = 41
	EvoLangLexerCOMMENT                = 42
	EvoLangLexerWHITESPACE             = 43
	EvoLangLexerOPEN_BRACKET           = 44
	EvoLangLexerCLOSE_BRACKET          = 45
	EvoLangLexerOPEN_S_BRACKET         = 46
	EvoLangLexerCLOSE_S_BRACKET        = 47
	EvoLangLexerOPEN_PAREN             = 48
	EvoLangLexerCLOSE_PAREN            = 49
	EvoLangLexerCOLON                  = 50
	EvoLangLexerHASH                   = 51
	EvoLangLexerDOT                    = 52
	EvoLangLexerCOMMA                  = 53
	EvoLangLexerAT                     = 54
	EvoLangLexerPIPE                   = 55
	EvoLangLexerOPEN_SANDBOX_MODE      = 56
	EvoLangLexerCLOSE_SANDBOX_MODE     = 57
	EvoLangLexerSANDBOX                = 58
	EvoLangLexerSANDBOX_CONTENT        = 59
)

// EvoLangLexerSANDBOX_MODE is the EvoLangLexer mode.
const EvoLangLexerSANDBOX_MODE = 1
